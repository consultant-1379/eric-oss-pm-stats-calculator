<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2024
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~ conditions stipulated in the agreement/contract under which the
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ericsson.nms</groupId>
        <artifactId>integration</artifactId>
        <version>15.2.0.30</version>
    </parent>
    <groupId>com.ericsson.oss.air</groupId>
    <artifactId>eric-oss-pm-stats-calculator</artifactId>
    <version>1.591.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>eric-oss-pm-stats-calculator</name>

    <modules>
        <module>eric-oss-pm-stats-calculator-launcher</module>
        <module>eric-oss-pm-stats-calculator-spring-boot</module>
        <module>eric-oss-pm-stats-calculator-spark</module>
        <module>testsuite</module>
    </modules>

    <scm>
        <developerConnection>${ericsson.scm.url}</developerConnection>
        <connection>${ericsson.scm.url}</connection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <enforcer.skip>true</enforcer.skip>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <ericsson.scm.url>
            scm:git:[fetch=]ssh://gerrit-gamma.gic.ericsson.se:29418/OSS/com.ericsson.oss.air/eric-oss-pm-stats-calculator[push=]ssh://gerrit-gamma.gic.ericsson.se:29418/OSS/com.ericsson.oss.air/eric-oss-pm-stats-calculator
        </ericsson.scm.url>

        <!-- JDK versions -->
        <source.java.version>17</source.java.version>
        <target.java.version>17</target.java.version>
        <sonar.java.source>${target.java.version}</sonar.java.source>
        <!-- Spark configuration -->
        <spark.directory.root>${user.home}/ericsson</spark.directory.root>

        <!-- 3PP Versions -->
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-compress.version>1.25.0</commons-compress.version>
        <version.commons-io>2.11.0</version.commons-io>
        <version.commons-lang3>3.12.0</version.commons-lang3>
        <version.commons-text>1.10.0</version.commons-text>
        <version.gson>2.8.9</version.gson>
        <version.guava>31.0.1-jre</version.guava>
        <version.hadoop>3.3.2</version.hadoop>
        <version.httpclient>4.5.13</version.httpclient>
        <version.jackson-annotations>2.13.4</version.jackson-annotations>
        <version.jackson-core>2.13.4</version.jackson-core>
        <version.jackson-databind>2.13.4.2</version.jackson-databind>
        <version.jackson-databind-csv>2.12.6</version.jackson-databind-csv>
        <version.jackson-datatype>2.13.4</version.jackson-datatype>
        <version.javax.javaee-api>8.0.1</version.javax.javaee-api>
        <flyway-core.version>9.22.1</flyway-core.version>
        <version.metrics>4.2.7</version.metrics>
        <version.maven-ejb-plugin>3.0.1</version.maven-ejb-plugin>
        <version.kafka>2.7.2</version.kafka>
        <version.postgresql-driver>42.5.0</version.postgresql-driver>
        <version.prometheus>0.15.0</version.prometheus>
        <version.micrometer>1.9.1</version.micrometer>
        <version.quartz>2.3.2</version.quartz>
        <version.resilience4j>1.7.0</version.resilience4j>
        <version.scala-library>2.12.15</version.scala-library>
        <version.slf4j>1.7.36</version.slf4j>
        <version.spark>3.3.3</version.spark>
        <version.avro>1.11.0</version.avro>
        <version.abris>6.2.0</version.abris>
        <version.io.netty>4.1.77.Final</version.io.netty>
        <version.lombok>1.18.22</version.lombok>
        <version.schema-registry>7.1.0</version.schema-registry>
        <spring-boot-starter-data-jpa.version>2.7.1</spring-boot-starter-data-jpa.version>
        <spring-boot-starter-actuator.version>2.7.1</spring-boot-starter-actuator.version>
        <spring-boot-configuration-processor.version>2.7.1</spring-boot-configuration-processor.version>
        <spring-boot-starter-webflux.version>2.7.1</spring-boot-starter-webflux.version>
        <spring-plugin-metadata.version>2.0.0.RELEASE</spring-plugin-metadata.version>
        <spring-kafka.version>2.8.8</spring-kafka.version>
        <jgrapht-core.version>1.5.1</jgrapht-core.version>
        <spring-boot-starter-web.version>2.7.1</spring-boot-starter-web.version>
        <version.hibernate>5.6.9.Final</version.hibernate>
        <!-- No Bazaar entry found -->
        <version.resteasy>3.5.1.Final</version.resteasy>

        <!-- Ericsson Dependency Versions -->
        <version.service-framework-api>4.0.17</version.service-framework-api>
        <version.service-framework>4.6.3</version.service-framework>
        <bro.agent.api.version>5.8.0</bro.agent.api.version>
        <version.interceptors>1.11</version.interceptors>
        <version.eric-common-logging>1.0.38</version.eric-common-logging>

        <!-- Test Dependency Versions -->
        <version.assertj-core>3.25.3</version.assertj-core>
        <assertj-db.version>2.0.2</assertj-db.version>
        <version.awaitility>3.1.6</version.awaitility>
        <byte-buddy.version>1.14.5</byte-buddy.version>
        <version.clearspring.analytics.stream>2.9.8</version.clearspring.analytics.stream>
        <version.h2database>2.1.214</version.h2database>
        <version.jackson-scala_2.12>2.12.3</version.jackson-scala_2.12>
        <version.javax-servlet-api>4.0.0</version.javax-servlet-api>
        <version.jersey-container-servlet>2.36</version.jersey-container-servlet>
        <version.jsr311-api>1.1.1</version.jsr311-api>
        <junit-jupiter.version>5.10.0</junit-jupiter.version>
        <version.lz4-java>1.5.0</version.lz4-java>
        <version.maven-dependency-plugin>3.6.1</version.maven-dependency-plugin>
        <version.mockito>5.10.0</version.mockito>
        <mockito-junit-jupiter.version>5.10.0</mockito-junit-jupiter.version>
        <version.scala-xml>1.2.0</version.scala-xml>
        <version.wiremock>2.18.0</version.wiremock>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <junit-platform-launcher.version>1.10.0</junit-platform-launcher.version>
        <junit-pioneer.version>2.2.0</junit-pioneer.version>
        <testcontainers.postgresql.version>1.19.4</testcontainers.postgresql.version>
        <testcontainers.junit-jupiter.version>1.19.4</testcontainers.junit-jupiter.version>
        <testcontainers.kafka.version>1.19.4</testcontainers.kafka.version>
        <jsqlparser.version>4.4</jsqlparser.version>
        <spring-jdbc.version>5.3.21</spring-jdbc.version>
        <spring-boot-starter-test.version>2.7.1</spring-boot-starter-test.version>
        <spring-kafka-test.version>2.8.8</spring-kafka-test.version>
        <version.spring-context>5.3.22</version.spring-context>
        <version.license-maven-plugin>3.0</version.license-maven-plugin>
        <version.sonar-maven-plugin>3.8.0.2131</version.sonar-maven-plugin>
        <!-- JaCoCo plugin for Java Code Coverage -->
        <version.jcoco-maven.plugin>0.8.8</version.jcoco-maven.plugin>
        <!-- Minimum ratio or percentage of instructions to be covered, used by
                JaCoCo plugin. Industry standard is 0.8 or 80% which allows at least 80%
                of the code to be covered by the test cases. -->
        <jacoco-maven-plugin.coveredratio.minimum>0.8</jacoco-maven-plugin.coveredratio.minimum>

        <!-- EAR configuration -->
        <version.jee>6</version.jee>
        <project.ear.defaultLibBundleDir>lib</project.ear.defaultLibBundleDir>
        <project.ear.Dependencies>org.slf4j</project.ear.Dependencies>

        <!-- EJB configuration -->
        <version.ejb>3.1</version.ejb>

        <!-- Build Dependencies -->
        <version.enm-checkstyle-module>1.1.103</version.enm-checkstyle-module>
        <version.checkstyle-tool>8.41</version.checkstyle-tool>
        <version.maven-checkstyle-plugin>3.1.2</version.maven-checkstyle-plugin>
        <version.openapi-generator-maven-plugin>5.0.0</version.openapi-generator-maven-plugin>
        <version.maven-sortpom-plugin>2.13.1</version.maven-sortpom-plugin>
        <version.maven-scm-provider-gitexe>1.8.1</version.maven-scm-provider-gitexe>
        <scala-maven-plugin.version>4.8.1</scala-maven-plugin.version>

        <!-- SonarQube -->
        <sonar.sources>src/main/java</sonar.sources>
        <sonar.tests></sonar.tests> <!-- Test files need not be analyzed as no rules are applied to them -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SON Dependencies -->
            <dependency>
                <groupId>com.ericsson.oss.air</groupId>
                <artifactId>eric-oss-pm-stats-calculator-launcher</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.air</groupId>
                <artifactId>eric-oss-pm-stats-calculator-spark</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.air</groupId>
                <artifactId>eric-oss-pm-stats-calculator-spring-boot</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson</groupId>
                <artifactId>kafka-tools</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- 3PP Dependencies -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${version.io.netty}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${version.commons-io}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${version.gson}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.guava}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.commons-lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${version.commons-text}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${version.httpclient}</version>
                <exclusions>
                  <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                  </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jmx</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${version.micrometer}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${version.hadoop}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${version.jackson-annotations}</version> <!-- Overwrites transitive version -->
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.jackson-core}</version>          <!-- Overwrites transitive version -->
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.jackson-databind}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${version.jackson-datatype}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${version.jackson-databind-csv}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${version.javax.javaee-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${version.kafka}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgresql-driver}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${version.quartz}</version>
            </dependency>
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-core</artifactId>
                <version>${jgrapht-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-circuitbreaker</artifactId>
                <version>${version.resilience4j}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-retry</artifactId>
                <version>${version.resilience4j}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${version.scala-library}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot-starter-data-jpa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot-starter-web.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.plugin</groupId>
                <artifactId>spring-plugin-metadata</artifactId>
                <version>${spring-plugin-metadata.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot-configuration-processor.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${version.prometheus}</version>
            </dependency>
            <dependency>
                <!-- WA while the parent (son-parent and its parent) overwrites the BOM version -->
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-catalyst_2.12</artifactId>
                <version>${version.spark}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_2.12</artifactId>
                <version>${version.spark}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-launcher_2.12</artifactId>
                <version>${version.spark}</version>
                <scope>provided</scope> <!-- Provided by the Spark Hadoop binary in the Dockerfile -->
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_2.12</artifactId>
                <version>${version.spark}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-0-10_2.12</artifactId>
                <version>${version.spark}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${version.avro}</version>
            </dependency>
            <dependency>
                <groupId>za.co.absa</groupId>
                <artifactId>abris_2.12</artifactId>
                <version>${version.abris}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-avro_2.12</artifactId>
                <version>${version.spark}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-token-provider-kafka-0-10_2.12</artifactId>
                <version>${version.spark}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.lombok}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${version.schema-registry}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-client</artifactId>
                <version>${version.schema-registry}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot-starter-webflux.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_2.12</artifactId>
                <version>${version.jackson-scala_2.12}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot-starter-actuator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${version.hibernate}</version>
            </dependency>

            <!-- Ericsson Dependencies -->
            <dependency>
                <groupId>com.ericsson.oss.itpf.sdk</groupId>
                <artifactId>sdk-micro-healthcheck</artifactId>
                <version>${version.service-framework}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.itpf.sdk</groupId>
                <artifactId>sdk-micro-healthcheck-api</artifactId>
                <version>${version.service-framework-api}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.adp.mgmt</groupId>
                <artifactId>eric-ctrl-bro-lib-agent-api-cxa30109</artifactId>
                <version>${bro.agent.api.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.ericsson.orchestration.common.utilities</groupId>
                <artifactId>orchestration-interceptors-spring-boot-starter</artifactId>
                <version>${version.interceptors}</version>
            </dependency>
            <dependency>
              <groupId>com.ericsson.oss.orchestration.eo</groupId>
              <artifactId>eric-common-logging</artifactId>
              <version>${version.eric-common-logging}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${version.spring-context}</version>
            </dependency>


            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.assertj-core}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-db</artifactId>
                <version>${assertj-db.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.awaitility}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2database}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-mapreduce-client-core</artifactId>
                <version>${version.hadoop}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${version.javax-servlet-api}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${version.jersey-container-servlet}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>jsr311-api</artifactId>
                <version>${version.jsr311-api}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit-platform-launcher.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit-pioneer</groupId>
                <artifactId>junit-pioneer</artifactId>
                <version>${junit-pioneer.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-engine</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-params</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.junit-jupiter.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.postgresql.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.lz4</groupId>
                <artifactId>lz4-java</artifactId>
                <version>${version.lz4-java}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-json</artifactId>
                <version>${version.metrics}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${version.mockito}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${version.resteasy}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-xml_2.12</artifactId>
                <version>${version.scala-xml}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-kvstore_2.12</artifactId>
                <version>${version.spark}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-network-shuffle_2.12</artifactId>
                <version>${version.spark}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.clearspring.analytics</groupId>
                <artifactId>stream</artifactId>
                <version>${version.clearspring.analytics.stream}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${version.wiremock}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot-starter-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring-kafka-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.jsqlparser</groupId>
                <artifactId>jsqlparser</artifactId>
                <version>${jsqlparser.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring-jdbc.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.maven-dependency-plugin}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>analyze-dep-mgt</goal>
                                <goal>analyze-only</goal>
                            </goals>
                            <phase>validate</phase>
                            <configuration>
                                <failBuild>false</failBuild>
                                <ignoredUnusedDeclaredDependencies>
                                    <ignoredUnusedDeclaredDependency>com.google.code.gson:gson</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>com.fasterxml.jackson.core:jackson-annotations</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>io.github.resilience4j:resilience4j-core</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${target.java.version}</source>
                        <target>${target.java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${version.maven-ejb-plugin}</version>
                    <configuration>
                        <ejbVersion>${version.ejb}</ejbVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${version.license-maven-plugin}</version>
                    <configuration>
                        <header>./license/copyright-2024.txt</header>
                        <validHeaders>
                            <validHeader>./license/copyright-2023.txt</validHeader>
                            <validHeader>./license/copyright-2022.txt</validHeader>
                            <validHeader>./license/copyright-2021.txt</validHeader>
                            <validHeader>./license/copyright-2020.txt</validHeader>
                        </validHeaders>
                        <aggregate>true</aggregate>
                        <excludes>
                            <exclude>.bob/*</exclude>
                            <exclude>.bob*/</exclude>
                            <exclude>k8s-logs/*</exclude>
                            <exclude>**/.helmignore</exclude>
                            <exclude>**/*.html</exclude>
                            <exclude>**/_helpers.tpl</exclude>
                            <exclude>**/*.tgz</exclude>
                            <exclude>**/VERSION*</exclude>
                            <exclude>**/*.repo</exclude>
                            <exclude>license/copyright*</exclude>
                            <exclude>design-rule-check-report*</exclude>
                            <exclude>helm-install-dry-run.log</exclude>
                            <exclude>*artifact.properties</exclude>
                            <exclude>**/rest_conversion_log.txt</exclude>
                            <exclude>**/*openapi*.yaml</exclude>
                            <exclude>**/rest2html*.zip</exclude>
                            <exclude>settings.xml</exclude>
                            <exclude>**/resources/inputstream.txt</exclude>
                            <exclude>**/jars/*.pom</exclude>
                            <exclude>ci/local_pipeline_env.txt</exclude>
                            <exclude>**/*.scala</exclude>  <!-- TODO: Add Scala files for licence -->
                            <exclude>**/*.lua</exclude>
                            <exclude>fossa/*</exclude>
                            <exclude>config/dependencies/*</exclude>
                        </excludes>
                        <headerDefinitions>
                            <headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
                            <headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
                            <headerDefinition>./license/propertiesHeaderDefinition.xml</headerDefinition>
                        </headerDefinitions>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${version.maven-checkstyle-plugin}</version>
                    <configuration>
                        <consoleOutput>true</consoleOutput>
                        <logViolationsToConsole>true</logViolationsToConsole>
                        <configLocation>src/main/resources/checkstyle.xml</configLocation>
                        <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                        <violationSeverity>warning</violationSeverity>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <failOnViolation>false</failOnViolation>
                        <encoding>UTF-8</encoding>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${version.checkstyle-tool}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.ericsson.cds</groupId>
                            <artifactId>checkstyle-module</artifactId>
                            <version>${version.enm-checkstyle-module}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.github.ekryd.sortpom</groupId>
                            <artifactId>sortpom-maven-plugin</artifactId>
                            <version>${version.maven-sortpom-plugin}</version>
                            <type>maven-plugin</type>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${version.sonar-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala-maven-plugin.version}</version>
                    <configuration>
                        <source>${source.java.version}</source>
                        <target>${target.java.version}</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- JaCoCo plugin for Java Code Coverage -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.jcoco-maven.plugin}</version>
                <configuration>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>test</phase>
                        <!-- JaCoCo uses a set of different counters to calculate coverage metrics -->
                        <!-- Check configuration used to specify rules on element types (BUNDLE,
                             PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
                             to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
                             and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
                             COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). A limit ratio may
                             optionally be declared as a percentage where 0.80 and 80% represent the same
                             value, the value must end with %. -->
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>agent-for-ut</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>agent-for-it</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>snapshot</id>
            <name>armseligic-snapshot</name>
            <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-dev-local</url>
        </snapshotRepository>
        <repository>
            <id>release</id>
            <name>armseligic-release</name>
            <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-release-local</url>
        </repository>
    </distributionManagement>
</project>
